{"version":3,"file":"index.js","sources":["../src/utils/throttle.ts","../src/ScrollSpy/ScrollSpy.tsx"],"sourcesContent":["export const throttle = (callback: () => void, limit: number) => {\n  var tick = false;\n\n  return () => {\n    if (!tick) {\n      callback();\n      tick = true;\n      setTimeout(function () {\n        tick = false;\n      }, limit);\n    }\n  };\n};\n","import * as React from \"react\";\nimport {\n  MutableRefObject,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { throttle } from \"../utils/throttle\";\n\ninterface ScrollSpyProps {\n  children: ReactNode;\n\n  // refs\n  navContainerRef?: MutableRefObject<HTMLDivElement | null>;\n  parentScrollContainerRef?: MutableRefObject<HTMLDivElement | null>;\n\n  // throttle\n  scrollThrottle?: number;\n\n  // callback\n  onUpdateCallback?: (id: string) => void;\n\n  // offsets\n  offsetTop?: number;\n  offsetBottom?: number;\n\n  // customize attributes\n  useDataAttribute?: string;\n  activeClass?: string;\n\n  useBoxMethod?: boolean;\n}\n\nconst ScrollSpy = ({\n  children,\n\n  // refs\n  navContainerRef,\n  parentScrollContainerRef,\n\n  // throttle\n  scrollThrottle = 300,\n\n  // callback\n  onUpdateCallback,\n\n  // offsets\n  offsetTop = 0,\n  offsetBottom = 0,\n\n  // customize attributes\n  useDataAttribute = \"to-scrollspy-id\",\n  activeClass = \"active-scroll-spy\",\n\n  useBoxMethod = true,\n}: ScrollSpyProps) => {\n  const scrollContainerRef = useRef<HTMLDivElement | null>(null);\n  const [navContainerItems, setNavContainerItems] = useState<NodeListOf<Element> | undefined>(); // prettier-ignore\n\n  // keeps track of the Id in navcontainer which is active\n  // so as to not update classLists unless it has been updated\n  const prevIdTracker = useRef(\"\");\n\n  // To get the nav container items depending on whether the parent ref for the nav container is passed or not\n  useEffect(() => {\n    navContainerRef\n      ? setNavContainerItems(\n          navContainerRef.current?.querySelectorAll(\n            `[data-${useDataAttribute}]`\n          )\n        )\n      : setNavContainerItems(\n          document.querySelectorAll(`[data-${useDataAttribute}]`)\n        );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navContainerRef]);\n\n  // fire once after nav container items are set\n  useEffect(() => {\n    checkAndUpdateActiveScrollSpy();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navContainerItems]);\n\n  const isVisible = (el: HTMLElement) => {\n    const rectInView = el.getBoundingClientRect();\n\n    if (useBoxMethod) {\n      const useHeight = parentScrollContainerRef?.current\n        ? parentScrollContainerRef?.current.offsetHeight\n        : window.innerHeight;\n      const hitbox_top = useHeight;\n      const element_top = rectInView.top;\n      const element_bottom = rectInView.top + useHeight;\n\n      return (\n        hitbox_top < element_bottom + offsetBottom &&\n        hitbox_top > element_top - offsetTop\n      );\n    } else {\n      // this decides how much of the element should be visible\n      const leniency = parentScrollContainerRef?.current\n        ? parentScrollContainerRef?.current.offsetHeight * 0.5\n        : window.innerHeight * 0.5;\n\n      const useHeight = parentScrollContainerRef?.current\n        ? parentScrollContainerRef?.current.offsetHeight\n        : window.innerHeight;\n\n      return (\n        rectInView.top + leniency + offsetTop >= 0 &&\n        rectInView.bottom - leniency - offsetBottom <= useHeight\n      );\n    }\n  };\n\n  const checkAndUpdateActiveScrollSpy = () => {\n    const scrollParentContainer = scrollContainerRef.current;\n\n    // if there are no children, return\n    if (!(scrollParentContainer && navContainerItems)) return;\n\n    // loop over all children in scroll container\n    for (let i = 0; i < scrollParentContainer.children.length; i++) {\n      // get child element\n      const useChild = scrollParentContainer.children.item(i) as HTMLDivElement;\n\n      const elementIsVisible = isVisible(useChild);\n\n      // check if the element is in the viewport\n      if (elementIsVisible) {\n        // if so, get its ID\n        const changeHighlightedItemId = useChild.id;\n\n        // if the element was same as the one currently active ignore it\n        if (prevIdTracker.current === changeHighlightedItemId) return;\n\n        // now loop over each element in the nav Container\n        navContainerItems.forEach((el) => {\n          const attrId = el.getAttribute(`data-${useDataAttribute}`);\n\n          // if the element contains 'active' the class remove it\n          if (el.classList.contains(activeClass)) {\n            el.classList.remove(activeClass);\n          }\n\n          // check if its ID matches the ID we got from the viewport\n          // also make sure it does not already contain the 'active' class\n          if (\n            attrId === changeHighlightedItemId &&\n            !el.classList.contains(activeClass)\n          ) {\n            el.classList.add(activeClass);\n\n            if (onUpdateCallback) {\n              onUpdateCallback(changeHighlightedItemId);\n            }\n\n            prevIdTracker.current = changeHighlightedItemId;\n            window.history.pushState({}, \"\", `#${changeHighlightedItemId}`);\n          }\n        });\n        break;\n      }\n    }\n  };\n\n  // listen for scroll event\n  parentScrollContainerRef\n    ? // if ref for scrollable div is provided\n      parentScrollContainerRef.current?.addEventListener(\n        \"scroll\",\n        throttle(checkAndUpdateActiveScrollSpy, scrollThrottle)\n      )\n    : // else listen for scroll in window\n      window.addEventListener(\n        \"scroll\",\n        throttle(checkAndUpdateActiveScrollSpy, scrollThrottle)\n      );\n\n  return <div ref={scrollContainerRef}>{children}</div>;\n};\n\nexport default ScrollSpy;\n"],"names":["useRef","useState","useEffect","React"],"mappings":"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"}